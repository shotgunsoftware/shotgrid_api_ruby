# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `guard-compat` gem.
# Please instead update this file by running `bin/tapioca gem guard-compat`.

# Provided empty definition so requiring the plugin without Guard won't crash
# (e.g. when added to a Gemfile without `require: false`)
#
# source://guard-compat//lib/guard/compat/plugin.rb#5
module Guard; end

# source://guard-compat//lib/guard/compat/plugin.rb#24
module Guard::Compat
  class << self
    # TODO: this is just a temporary workaround to allow plugins
    # to use watcher patterns in run_all
    #
    # source://guard-compat//lib/guard/compat/plugin.rb#27
    def matching_files(plugin, files); end

    # source://guard-compat//lib/guard/compat/plugin.rb#39
    def watched_directories; end
  end
end

# source://guard-compat//lib/guard/compat/plugin.rb#54
module Guard::Compat::UI
  class << self
    # source://guard-compat//lib/guard/compat/plugin.rb#55
    def color(text, *colors); end

    # @return [Boolean]
    #
    # source://guard-compat//lib/guard/compat/plugin.rb#63
    def color_enabled?; end

    # source://guard-compat//lib/guard/compat/plugin.rb#95
    def debug(message, options = T.unsafe(nil)); end

    # source://guard-compat//lib/guard/compat/plugin.rb#103
    def deprecation(message, options = T.unsafe(nil)); end

    # source://guard-compat//lib/guard/compat/plugin.rb#87
    def error(message, options = T.unsafe(nil)); end

    # source://guard-compat//lib/guard/compat/plugin.rb#71
    def info(message, options = T.unsafe(nil)); end

    # source://guard-compat//lib/guard/compat/plugin.rb#111
    def notify(msg, options = T.unsafe(nil)); end

    # source://guard-compat//lib/guard/compat/plugin.rb#79
    def warning(message, options = T.unsafe(nil)); end
  end
end

# Monkey patch Plugin to just keep the interface
#
# source://guard-compat//lib/guard/compat/plugin.rb#13
class Guard::Plugin
  # @return [Plugin] a new instance of Plugin
  #
  # source://guard-compat//lib/guard/compat/plugin.rb#14
  def initialize(_options = T.unsafe(nil)); end
end
